{"version":3,"sources":["Component/GifCard.jsx","Component/searchField.jsx","App.js","reportWebVitals.js","index.js"],"names":["GifCard","src","this","props","source","name","key","Component","SearchField","handleSubmit","event","preventdefault","setState","searchTerm","handleSearch","target","value","handleSearchInput","isSearchClicked","isTrendClicked","isRandomClicked","searchInput","state","handleTrendInput","trendInput","handleRandomInput","randomInput","className","placeholder","onChange","onClick","loading","searchGif","map","gif","index","id","images","original","url","trendingGif","console","log","randomGif","App","handleSearchByInput","searchTermFromChild","a","isLoading","axios","get","data","error","handleTrendingGif","handleRandomGif","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1434e3eb.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class GifCard extends Component\r\n{\r\n    render(){\r\n        return(\r\n            <div key = {this.props.key}>\r\n                <img key= {this.props.name} src = {this.props.source}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport GifCard from \"./GifCard\";\r\n// import './App.css';\r\n\r\nexport default class SearchField extends Component{\r\n    \r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            searchTerm: '',\r\n            isSearchClicked: false,\r\n            isTrendClicked: false,\r\n            isRandomClicked: false,\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) =>{\r\n        event.preventdefault()\r\n        this.setState({\r\n            searchTerm: ''\r\n        })\r\n    }\r\n    \r\n    handleSearch = (event) =>{\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSearchInput = () =>{\r\n        this.setState({\r\n            isSearchClicked: true,\r\n            isTrendClicked: false,\r\n            isRandomClicked: false,\r\n            searchTerm: ''\r\n        }\r\n       \r\n    )\r\n        this.props.searchInput(this.state.searchTerm, this.state.isSearchClicked);\r\n    }\r\n\r\n    handleTrendInput = () =>{\r\n        this.setState({\r\n            isSearchClicked: false,\r\n            isTrendClicked: true,\r\n            isRandomClicked: false,\r\n            searchTerm: ''\r\n        })\r\n        this.props.trendInput(this.state.isTrendClicked);\r\n    }\r\n\r\n    handleRandomInput = () => {\r\n        this.setState({\r\n            isSearchClicked: false,\r\n            isTrendClicked: false,\r\n            isRandomClicked: true,\r\n            searchTerm: ''\r\n        })\r\n        this.props.randomInput(this.state.isRandomClicked);\r\n    }\r\n    \r\n    render()\r\n    {\r\n        return(\r\n            <div className = \"searchBoxContainer\">\r\n            \r\n                <input value = {this.state.searchTerm} placeholder = \"look up a gif...\" name = \"searchTerm\" onChange={this.handleSearch}></input>\r\n                <button className = \"btn \" name = \"search\" onClick = {this.handleSearchInput}>Search</button>\r\n                <button className = \"btn\" name = \"trending\" onClick = {this.handleTrendInput}>Trending</button>\r\n                <button className = \"btn\" name = \"random\" onClick = {this.handleRandomInput}>Random</button>\r\n                    \r\n                <div>\r\n                {\r\n                   this.props.loading === true?\r\n                  \r\n                   <div>\r\n                       Loading\r\n                   </div> \r\n                   :\r\n                   this.props.loading === null?\r\n                   <div> Default </div>\r\n                   :\r\n                   this.state.isSearchClicked? \r\n                   this.props.searchGif.map((gif, index) =>{\r\n                       \r\n                       return(\r\n                           <GifCard name = {gif.id} key = {index + 1} source = {gif.images.original.url}/>\r\n                            );\r\n                   }) \r\n                   : this.state.isTrendClicked? \r\n                   this.props.trendingGif.map((gif, index) =>{\r\n                    console.log(gif)\r\n                       return(\r\n                           <GifCard name = {gif.id} key = {index + 1} source = {gif.images.original.url}/>\r\n                            );\r\n                   })\r\n                   : \r\n                   this.props.randomGif.map((gif, index) =>{\r\n                       return(\r\n                           <GifCard name = {gif.id} key = {index + 1} source = {gif.images.original.url}/>\r\n                            );\r\n                   })\r\n                }\r\n                </div>\r\n               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import './App.css';\nimport SearchField from './Component/searchField';\nimport React, {Component} from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nexport default class App extends Component{\n  constructor()\n    {\n        super();\n        this.state = {\n            gif: [],\n            searchTerm: '',\n            trendingGif: [],\n            randomGif: [],\n            isLoading: null,\n        }\n    }\n\n    handleSearchByInput =  async (searchTermFromChild) =>\n    {\n        const url = `https://api.giphy.com/v1/gifs/search?q=${searchTermFromChild}&rating=g&api_key=VPO2hf8Msh28T0DeFVHly9hhQh207tC2`;\n\n        this.setState({isLoading: true})\n\n        try \n        {\n          let gif = await axios.get(url);\n          this.setState({ gif: gif.data.data, isLoading: false});\n        } catch (error) {\n          console.error(error);\n        }\n    }\n\n    handleTrendingGif = async () => \n    {\n        const url = `https://api.giphy.com/v1/gifs/trending?q=&rating=g&api_key=VPO2hf8Msh28T0DeFVHly9hhQh207tC2`;\n        \n        this.setState({isLoading: true})\n\n        try \n        {\n          let gif = await axios.get(url);\n          this.setState({ trendingGif: gif.data.data, isLoading: false});\n        } catch (error) {\n          console.error(error);\n        } \n    }\n\n    handleRandomGif = async () => \n    {\n      let url = `https://api.giphy.com/v1/gifs/random?q=&rating=g&api_key=VPO2hf8Msh28T0DeFVHly9hhQh207tC2`;\n       \n      this.setState({isLoading: true})\n\n      try \n      {\n        let gif = await axios.get(url);\n        this.setState({ randomGif: [gif['data']['data']], isLoading: false});\n      } catch (error) {\n        console.error(error);\n      } \n    }\n    \n    render()\n    {\n        return( \n            <>\n                <SearchField \n                searchGif = {this.state.gif} \n                searchInput = {this.handleSearchByInput} \n                trendInput = {this.handleTrendingGif} \n                randomInput = {this.handleRandomGif} \n                trendingGif = {this.state.trendingGif} \n                randomGif = {this.state.randomGif}\n                loading = {this.state.isLoading}\n                />\n            </>\n        );\n    }\n}\n\n\n\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}